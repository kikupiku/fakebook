extends layout

block content 
  h1= title
  h2= user.fullName
  img(src=user.picture)
    
  if (currentUser.friendRequests.find(request => request == user._id))
    p Respond to request
    form(id='requestResponse' + index method='POST')
      input(type='hidden' value=user name='potentialFriend')
      button(type='submit' formaction='/request-accept' method='POST') Accept
      button(type='submit' formaction='/request-decline' method='POST') Decline
  else if (user.friendRequests.find(request => request == currentUser._id))
    p Request pending
    form(id='cancelRequest' + index method='POST')
      input(type='hidden' value=user name='potentialFriend')
      button(type='submit' formaction='/request-cancel' method='POST') Cancel Request
  else if (currentUser.friends.includes(user._id))
    p You are friends
    form(id='removeFriend' + index method='POST')
      input(type='hidden' value=user._id name='soonExFriend')
      button(type='submit' formaction='/remove-friend' method='POST') Remove from Friends
  else if (currentUser._id.toString() !== user._id.toString())
    form(id='requestFriendship' + index action='/request-friendship' method='POST')
      input(type='hidden' value=user name='potentialFriend')
      button(type='submit' action='/requestFriendship') Add Friend
      
  br
    
  if (currentUser._id.toString() === user._id.toString())  
    form.add-post(id='createNewPost' method='POST' action='/posts' enctype='multipart/form-data')
      label(for='postContent') Write a Post:
      br
      textarea#postContent(type='text', name='postContent', required='true')
      br
      label(htmlFor='pictureInput') Add an Image:
      input(type='file' id='pictureInput' class='pictureInput' name='image')
      br
      button(type='submit' formaction='/posts' method='POST') Add Post
    
  br
  
  div.post-list
    for post, index in postsOfUser
      div.post-container
        if (currentUser._id.toString() == post.author._id)
          a.edit-btn.btn(href='/posts/' + post._id + '/edit') Edit Post
        p= post.postContent
        img.smallProfilePic(src=post.author.picture)
        a(href='/users/' + post.author._id) #{post.author.fullName}
        if (post.postPicture !== '')
          img(src=post.postPicture)
        p Posted #{post.createdAgo}
        form.add-like(id='likeOnPost' + index method='POST' action='/posts/' + post._id)
          input(type='hidden' id='postId' + index name='postId' value=post._id)
          input(type='hidden' id='postFan' + index name='postFan' value=currentUser._id)
          if (post.likes.includes(currentUser._id))
            button.like-btn(method='POST' type='submit' formaction='../remove-like') Remove like
          else
            button.like-btn(method='POST' type='submit' formaction='/posts/' + post._id) Like
          span  #{post.likes.length}
          if (post.likes.length == 1)
            span  like
          else
            span  likes
        br
        form.add-comment(method='POST' action='/comments' id='add-comment' + post._id + index)
          label(for='commentContent') Write a Comment:
          br
          textarea#commentContent(type='text', name='commentContent', required='true')
          input(type='hidden' name='commentedPostId' value=post._id)
          br
          button(type='submit' formaction='/comments' method='POST') Add Comment
        for comment in commentsToPostsOfUser
          if (comment.post._id.toString() == post._id)
            div.commentContainer
              if (currentUser._id.toString() == comment.commenter._id)
                a.edit-btn.btn(href='/posts/' + post._id + '/edit') Edit Comment
              p= comment.commentContent
              img.smallerProfilePic(src=comment.commenter.picture)
              a(href='/users/' + comment.commenter._id)  #{comment.commenter.fullName}
              p Commented #{comment.createdAgo}
