extends layout

block content
  h1= title
  
  div.new-post-container
    form.add-post(id='createNewPost' method='POST' action='/posts' enctype='multipart/form-data')
      label.post-label(for='postContent') Write a Post:
      br
      textarea#postContent(type='text', name='postContent', required='true')
      br
      div.buttons
        input.custom-post-image(type='file' id='pictureInput' class='pictureInput' name='image')
        button.main-btn(type='submit' formaction='/posts' method='POST') Add Post
    
  br
    
  div.post-list
    for post, index in postsOfFriends
      div.post-container
        div.descr-container
          img.smallProfilePic(src=post.author.picture)
          a.author-link(href='/users/' + post.author._id) #{post.author.fullName}
          span  posted #{post.createdAgo}:
        if (post.postPicture !== '')
          img.post-pic(src=post.postPicture)
        if (postToEdit)
          if (postToEdit._id.toString() == post._id.toString())
            form.edit-post(id='editPost' + post._id method='POST' action='/posts' + post._id + '/edit' enctype='multipart/form-data')
              label.post-label(for='postContent') Edit the Post:
              textarea#postContent(type='text', name='postContent', required='true') #{post.postContent}
              br
              div.edition-buttons
                input.custom-post-image(type='file' id='pictureInput' class='pictureInput' name='image')
                button.main-btn(type='submit' formaction='/posts/' + post._id + '/edit' method='POST') Update Post 
            form.cancel-edit(id='cancelEdit' method='POST' action='/')
              input(type='hidden' id='postToEditId' name='postToEditId' value=false)
              button.cancel-btn.cancel-big(type='submit' formation='/' method='POST') Cancel
          else    
            p.post-content #{post.postContent}
            form.add-like(id='likeOnPost' + index method='POST' action='/posts/' + post._id)
              input(type='hidden' id='postId' + index name='postId' value=post._id)
              input(type='hidden' id='postFan' + index name='postFan' value=currentUser._id)
              if (post.likes.includes(currentUser._id))
                button.like-btn(method='POST' type='submit' formaction='remove-like') Remove like
              else
                button.like-btn(method='POST' type='submit' formaction='/posts/' + post._id) Like
              span  #{post.likes.length}
              if (post.likes.length == 1)
                span  like
              else
                span  likes
        else    
          if (currentUser._id.toString() == post.author._id)
            div.manage-posts
              form(id='determinePostEdit' method='POST' action='/')
                input(type='hidden' id='postToEditId' name='postToEditId' value=post._id)
                button.edit-btn.edit-big(type='submit' formation='/' method='POST')
              form(id='deletePost' method='POST' action='/posts/' + post._id + '/delete')
                input(type='hidden' id='postToDeleteId' name='postToDeleteId' value=post._id)
                button.delete-btn.delete-big(type='submit' formation='/posts/' + post._id + '/delete' method='POST')
          p.post-content.content #{post.postContent}
          form.add-like(id='likeOnPost' + index method='POST' action='/posts/' + post._id)
            input(type='hidden' id='postId' + index name='postId' value=post._id)
            input(type='hidden' id='postFan' + index name='postFan' value=currentUser._id)
            if (post.likes.includes(currentUser._id))
              button.like-btn(method='POST' type='submit' formaction='remove-like') Remove like
            else
              button.like-btn(method='POST' type='submit' formaction='/posts/' + post._id) Like
            span  #{post.likes.length}
            if (post.likes.length == 1)
              span  like
            else
              span  likes
              
        br
          
        form.add-comment(method='POST' action='/comments' id='add-comment' + post._id + index)
          label.comment-label(for='commentContent') Write a Comment:
          div.create-comment-container
            textarea#commentContent(type='text', name='commentContent', required='true')
            input(type='hidden' name='commentedPostId' value=post._id)
            button.main-btn(type='submit' formaction='/comments' method='POST') Add Comment
        
        for comment in commentsToPostsOfFriends
          if (comment.post._id.toString() == post._id)
            div.comment-container
              div.descr-container
                img.smallerProfilePic(src=comment.commenter.picture)
                a.author-link(href='/users/' + comment.commenter._id)  #{comment.commenter.fullName}
                span.time-descr commented #{comment.createdAgo}
              if (commentToEdit)
                if (commentToEdit._id.toString() == comment._id.toString())
                  form.edit-comment(id='editComment' + comment._id method='POST' action='/comments' + comment._id + '/edit')
                    label.comment-label(for='postContent') Edit your Comment:
                    textarea#commentContent(type='text', name='commentContent', required='true') #{comment.commentContent}
                    button.main-btn(type='submit' formaction='/comments/' + comment._id + '/edit' method='POST') Update Comment 
                  form.cancel-edit(id='cancelEdit' method='POST' action='/')
                    input(type='hidden' id='commentToEditId' name='commentToEditId' value=false)
                    button.cancel-btn.cancel-small(type='submit' formation='/' method='POST') Cancel
                else    
                  p= comment.commentContent
              else
                if (currentUser._id.toString() == comment.commenter._id)
                  div.manage-comments
                    form(id='determineCommentEdit' method='POST' action='/')
                      input(type='hidden' id='commentToEditId' name='commentToEditId' value=comment._id)
                      button.edit-btn.edit-small(type='submit' formation='/' method='POST')
                    form(id='deleteComment' method='POST' action='/comments/' + comment._id + '/delete')
                      input(type='hidden' id='commentToDeleteId' name='commentToDeleteId' value=comment._id)
                      button.delete-btn.delete-small(type='submit' formation='/comments/' + comment._id + '/delete' method='POST')
                p.comment-content.content #{comment.commentContent}
    
